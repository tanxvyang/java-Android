面向对象编程 ***
        面向过程 ：考虑第一步做什么，第二步做什么

        面向对象：一切皆对象
                  谁，做什么
                  人类=人的特征+人的行为
           抽象
                类（类型）=特征（属性）+行为（方法）

             具体的某一个人=对象
             目的
                    简化开发
                    代码接近人类语言 ，接近现实逻辑
                    不会增加效率，反而影响效率
                    代码量会增加
              抽象
                        把事务的特征和行为抽象出来的过程
                封装
                        类型的特征应该是他自己的内部的东西
                        外部不应该能直接访问
                        可以提供一些行为暴露这些属性
            private 私有的
            public 公开的


            1.hotel，test1
                 某酒店有10层楼，每层12个房间
            要求为该酒店设计一套简单的前台客房管理程序
            改程序要求可以通过命令行输入命令为客户办理入驻和退房手续
            要求支持通过命令行输入以下命令来完成操作
            search:查询所有房间状态
            int 502 liheng:姓名为liheng的客人入住502房间
            out 502:502房间退房
            quit：退出程序

            抽象：   类型
                          酒店      房间         客人
              属性                  房间号       姓名
                         很多房间   房间状态
                          名字        客人
            方法
                      查看          进入  离开
                        入住
                          退房

           2.humanmarriage
           定义一个人类,给出相应属性
             其中人有一个配偶 partener,
             提供一个结婚的方法 marry
             结婚房条件符合正常人的逻辑
            3.intstaic
             定义一个放int类型的栈类
             提供相应的方法

            4.point
            定义一个点,point
            抽象出属性
            提供一些行为计算两点距离
            可以存在多个方法
            Math.sqrt(num)


            定义一个圆 circle
            抽象出属性
            提供计算面积的方法 area
            提供判断一个点是否在圆内 contains



            写一个虚数类  COmplex a+bi

            不变模式
            提供+预算 add
            符合数学逻辑
               public static final

               final
                        不可改变
                        类    最终类,不可被继承
                        属性    属性的值在创键完对象后 ,第一次赋值后,不允许修改
                        变量    初始化后不允许修改栈里的值
                        方法     方法不可被重写


               static
                        静态的
                                属于类,类加载时就有    ,由虚拟机调用
                                所有对象可以共享
                         可以修饰
                                属性
                                方法
                                内部类


                        静态的东西是不能访问成员的东西
                        反之可以
                        跟创建顺序有关

      作业
               有一副扑克牌
               发牌和洗牌
               发牌,按人数平均发牌


    --------------------------------------------------------


    单例模式
        写一个类
        是这个类在程序运行阶段
        有且只有一个实例  (数据库账号密码等)
                    不能new ,外部不能创建  (私有构造方法)
                    有一个对象,共享         (final static)
                    这个对象只创建一次

        Singleton
 ******什么情况会导致类加载
   ***     虚拟机在运行期间,一个类只会加载一次
          1.调用Java命令时
          2.创建对象时
          3.访问静态成员时
          4.class.forName("包名.类名")时







  ------------------------------------------
          面向对象特征  :封装;继承;多态
              Animal
              Bird
              Dog
              Bird is a Animal
              Dog  is  a Animal

              is a
              Java中是单继承
                    一个类只能继承一个父类

                     if( b instanceof Bird) {     //判断b 是 bird

                                ((Bird) b).sing();
                            }
        多态
                一种事务多种形态
                对象的多态
                        把一种对象用他自己或者他自己的父类来引用



        重载
                方便调用者
                在一个类中,方法名相同参数值不同

        重写/覆盖
                0.  继承的情况下,
                1.  子类觉得父类的方法已经不能满足子类的需求
                2.  子类方法名和父类方法名相同
                3.  参数相同
                4.  返回值类型相同
                5.  访问权限不能更小
                6.  抛出异常不能更大

                
         父类应用指向子类对象
                调用重写方法,执行的是子类的方法,
                如果需要调用之类自己的方法,需要做强制类型转换

                Java提供了一个类型转换保护的判断关键字 instanceof




访问权限修饰符
        修饰符       当前类   同包     子类   其他
        public        1        1       1      1
        protected      1       1       1      0  //保护子类,
         不写           1       1       0      0
        private        1       0       0      0



抽象的东西     person.transport+animal.animal

      abstract
             修饰
                 方法
                 类
                   有抽象方法的类一定是抽象类
                   抽象类跟普通的类一样,
                   抽象类是不能实例化的
                   但是有构造方法的.不能被外界new 只能被子类调用构造方法
                   对于抽象类的子类(普通类)必须实现所有的抽象方法

接口
    interface
            接口是规范
     作用
            1.规范
            2.分离调用者和实现者(解耦和)
         定义的属性:public static final

         定义的方法:public abstract

         接口中没有构造方法,不能实例化

         一个类能实现多个接口(is a 关系)

         接口和接口之间也可以互相继承(多个)




        流程
                1.立项
                2.需求分析
                3.概要设计
                4.祥细设计
                5.开发
                6.测试
                7.部署
                8.维护


练习    day08.interface_test02
        机枪兵  Marines     //类
        护士    Doctor        //类
        坦克  Tank            //类

        所有东西都能移动
        机枪兵和坦克都能攻击
        护士能治疗

        可以移动 mobile    //接口        移动 move
        可以攻击 Attackable //接口       攻击 attack
        可以治疗Treatable    //接口      治疗treat

        创建半个编队的单位   //new
        所有单位移动,其中可以攻击的攻击 //调用

简单工厂模式
        分离实现者和调用者
        userservice      客人

        userserviceImpl   厨师

        userservicefactory  fuwuyaun










